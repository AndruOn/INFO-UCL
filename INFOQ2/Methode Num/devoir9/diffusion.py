# -------------------------------------------------------------------------
#
# PYTHON for DUMMIES 18-19
# Problème 9
#
# Canevas de départ....
#
# -------------------------------------------------------------------------
# 
# NE PAS AJOUTER D'AUTRES INSTRUCTIONS import / from :-)
#

from numpy import *
from numpy.random import random

# =========================================================================

def diffusion(T,beta,nt):
    for t in range(nt):
        T[1:-1,1:-1]= T[1:-1,1:-1] + beta*(T[2: ,1:-1] + T[0:-2,1:-1] + T[1:-1,2: ] + T[1:-1,0:-2] - 4*T[1:-1,1:-1])
    return T

# =========================================================================

 
def diffusionSmart(T,beta,nt):
    nx,ny=shape(T)
    Tnew= copy(T)
    y=0
    for t in range(nt):
        Tnew[1:-1,1:-1]= T[1:-1,1:-1] + beta*(T[2: ,1:-1] + T[0:-2,1:-1] + T[1:-1,2: ] + T[1:-1,0:-2] - 4*T[1:-1,1:-1])
        Tnew[1:-1,y]= T[1:-1,y] + beta*(T[2: ,y] + T[0:-2,y] + T[1:-1,y] + T[1:-1,y+1] - 4*T[1:-1,y])
        T=copy(Tnew)
    return T
# =========================================================================
